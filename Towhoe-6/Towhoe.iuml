Exported into an image using PlantUML
https://www.codeproject.com/Articles/1278703/UML-Made-Easy-with-PlantUML-VS-Code
https://www.lucidchart.com/pages/uml-class-diagram
https://plantuml.com/class-diagram

CHEAT SHEET:
Extension <|--	
Composition *--	
Aggregation o--

Class01 *-- "many" Class02 

@startuml Towhoe 6
scale 2
note "Mutators and accessors are omitted\nbecause we like having space\n\nOverridden methods and additional\nfields are shown in subclasses\nwhile others are not" as N1
' Hitbox and dependencies
class Hitbox {
    -radius: int
    -xPos: int 
    -yPos: int
    -active: boolean
    +addX()    
    +addY()
}
' PhysicalObject and dependencies
abstract PhysicalObject {
    -xVel: int
    -yVel: int
    -hitbox: Hitbox
    {abstract} #clamp()
    {abstract} +move()
    {abstract} +updXVelocity()
    {abstract} +updYVelocity()
    {abstract} +draw()
}
Hitbox  o-- PhysicalObject  

' Bullet and dependencies
class Bullet {
    -active: boolean
    -hits: int
    -original_hits: int
    -dmg: int
    -previous_hit: ArrayList<Enemy>
    -col: Color
    +move()
    +hit()
    +hasHit()
    +isOffscreen()
    +draw()
    
}
PhysicalObject *--  Bullet   

' Player and dependencies
interface Ship {
    +shoot()
}
hide Ship fields

class Player {
    {static} +PLAYER_SPEED: int
    {static} +PLAYER_FOCUS_SPEED: int
    -lives: int
    -focus: boolean 
    -shooting: boolean 
    +shoot()
    +move()
    +focus()
    +unfocus()
    +hit()
    +draw()
}
PhysicalObject  *--     Player  
Ship            <|..    Player  

' Enemy and dependencies
class Enemy {
    -shots_per_second: double
    -FRAMES_PER_SHOT: int
    -frames_until_next: int
    -lives: int
    -dmg: int
    +shoot()
    +hit()
    +isOffscreen()
    +draw()
}
PhysicalObject  *--     Enemy   
Ship            <|..    Enemy   

' UserPanel and dependencies
interface JavaArcade {
    +running()
    +startGame()
    +getGameName()
    +pauseGame()
    +getInstructions()
    +getCredits()
    +getHighScore()
    +stopGame()
    +getPoints()
    +setDisplay()
    +addPlayerBullets()
}
hide JavaArcade fields

interface KeyListener{
    +keyTyped()
    +keyPressed()
    +keyReleased()
}
hide KeyListener fields

interface ActionListener {
    +actionPerformed()
}
hide ActionListener fields

class JPanel
hide JPanel fields
hide JPanel methods

class JLabel
hide JLabel fields
hide JLabel methods

class UserPanel {
    -player: Player
    -score: int
    -coins: int
    -timer: Timer
    -enemies: ArrayList<Enemy>
    -player_bullets: Set<Bullet>
    +addPlayerBullets()
    +paintComponent()
}
KeyListener     <|..    UserPanel   
ActionListener  <|..    UserPanel   
JavaArcade      <|..    UserPanel   
JPanel          *--     UserPanel   
Player          o--     UserPanel   
Bullet          o--     UserPanel   
JLabel          o--     UserPanel   

' GameStats and dependencies
class GameStats {
    -gameNameText: JTextField
    -currentHighScorer: JTextField
    -currentHighScore: JTextField
    -current_Score: JTextField
    -yourScoreText: JLabel
    -getHighScore: JLabel
    -lives: JLabel
    -points: JLabel
    +gameOver()
}
JPanel          *--     GameStats   
JLabel          o--     GameStats  

class JButton
hide JButton fields
hide JButton methods

' ControlPanel and dependencies
class ControlPanel {
    -game: JavaArcade
    -stats: GameStats
    -buttons: JButton
    +actionPerformed()
}
ActionListener  <|..    ControlPanel   
JPanel          *--     ControlPanel
JavaArcade      o--     ControlPanel
JButton         o--     ControlPanel

' Towhoe and dependencies
class JFrame
hide JFrame fields
hide JFrame methods

class Towhoe {
    +{static} GAME_WIDTH: int
    +{static} GAME HEIGHT: int
    +{static} window: Towhoe
    -game JavaArcade
    -display: GameStats
    -controls: ControlPanel
    +getGame()
}
JFrame          *--     Towhoe      
UserPanel       o--     Towhoe      
GameStats       o--     Towhoe      
ControlPanel       o--     Towhoe      
note left           : the one that runs

class EnemySpawner {
    -start_ns: long
    -frame_count: long
    -frames_until_spawn: int
    -last_val: double
    +spawn()
}

@enduml